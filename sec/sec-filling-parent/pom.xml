<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sec.analysis</groupId>
	<artifactId>sec-filling-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>${project.artifactId}</name>
	<description>Sec Filling  Spark</description>
	<inceptionYear>2015</inceptionYear>

	<developers>
		<developer>
			<name>Abhishek Sharma</name>
			<email>abhioncbr@yahoo.com</email>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>


	<properties>
<!-- General Properties  -->
		<copy.location>/home/abhi/projects/sec</copy.location>
		<project.build.directory>target</project.build.directory>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>

<!-- Scala Specific Properties  -->
		<scala.version>2.10.6</scala.version>
		<scala.compat.version>2.10</scala.compat.version>
<!-- Scala Spray Rest Api Client Properties  -->
		<scala.spray.client>1.3.3</scala.spray.client>
		<scala.spray.json>1.3.1</scala.spray.json>
<!-- Scala Akka Api Client Properties  -->
		<scala.akka.actor>2.3.11</scala.akka.actor>
		<scala.io.file_2.10>0.4.3</scala.io.file_2.10>

<!-- Spark Specific Properties  -->
		<spark.sql_2.10>1.6.1</spark.sql_2.10>
		<spark.core_2.10>1.6.1</spark.core_2.10>
		<spark.catalyst_2.10>1.6.1</spark.catalyst_2.10>

<!-- Hadoop Specific Properties  -->
	<hadoop.version>2.7.1</hadoop.version>
	
<!-- logging Specific Properties  -->
		<org.slf4j-version>1.7.5</org.slf4j-version>
		<logback-version>1.0.13</logback-version>
		
<!-- Unit Testing Specific Properties  -->
		<junit>4.12</junit>
		<scalatest>2.2.4</scalatest>
		<mockito>2.0.2-beta</mockito>
		<specs2-junit>2.4.16</specs2-junit>
		
<!-- Apache Frameworks Specific Properties  -->		
		<apache-poi>3.10-FINAL</apache-poi>
		<apache.http.client.version>4.5</apache.http.client.version>
		<apache.commons.executor.version>1.3</apache.commons.executor.version>

<!-- NLP Frameworks Specific Properties  -->	
		<stanford-corenlp>3.3.1</stanford-corenlp>
		<jsoup.version>1.8.2</jsoup.version>
		
<!-- Spring Framework Specific Properties  -->
		<org.aspectj-version>1.7.4</org.aspectj-version>
		<spring-batch-version>3.0.1.RELEASE</spring-batch-version>
		<spring-batch-excel-version>0.5.0-SNAPSHOT</spring-batch-excel-version>
		<jackson.databind-version>2.2.3</jackson.databind-version>
		<org.springframework-version>4.0.0.RELEASE</org.springframework-version>
	</properties>

	<profiles>
		<profile>
			<id>IDE</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build> 
				<!-- Put the IDE's build output in a folder other than target, so that IDE 
				builds don't interact with Maven builds -->
				<directory>target-ide</directory>
			</build>
		</profile>
	</profiles>
	
	<modules>
		<module>../sec-filling-static</module>
		<module>../sec-filling-analysis</module>
		<module>../sec-filling-spark</module>
	</modules>	

<!-- Common Dependency -->
	<dependencies>
<!-- Logging Dependency -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-version}</version>
		</dependency>

<!-- Unit Testing Dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.specs2</groupId>
			<artifactId>specs2-junit_${scala.compat.version}</artifactId>
			<version>${specs2-junit}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.compat.version}</artifactId>
			<version>${scalatest}</version>
			<scope>test</scope>
		</dependency>

<!-- Hadoop -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
		</dependency>
		
<!-- Spring Framework Context-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-core</artifactId>
			<version>${spring-batch-version}</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<!-- or whatever version you use -->
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<excludeScope>provided</excludeScope>
								<outputDirectory>${project.build.directory}/lib</outputDirectory>
								<overWriteReleases>false</overWriteReleases>
								<overWriteSnapshots>false</overWriteSnapshots>
								<overWriteIfNewer>true</overWriteIfNewer>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					 <version>2.6</version>
					<configuration>
						<includes><include>**/com/**</include></includes>
						<!-- <excludes>
							<exclude>*.xml</exclude>
							<exclude>*.conf</exclude>
							<exclude>*.properties</exclude>
							<exclude>**/resources/*</exclude>
							<exclude>**/input/*</exclude>
							<exclude>**/output/*</exclude>
						</excludes> -->
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathPrefix>lib/</classpathPrefix>
							</manifest>
							<manifestEntries>
								<Class-Path>resources/ input/ scripts/ </Class-Path>
							</manifestEntries>
						</archive>
						<outputDirectory>${project.build.directory}</outputDirectory>
					</configuration>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.7</version>
					<executions>
						<execution>
							<id>copy-resources-0</id>
							<phase>install</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
							<outputDirectory>${project.build.directory}/resources</outputDirectory>
								<resources>
									<resource>
										<filtering>true</filtering>
										<directory>src/main/resources</directory>
										<includes>
											<include>*.properties</include>
											<include>*.xml</include>
											<include>*.conf</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<id>copy-resources-1</id>
							<phase>install</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
							<outputDirectory>${project.build.directory}/input</outputDirectory>
								<resources>
									<resource>
										<filtering>false</filtering>
										<directory>input</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<id>copy-resources-2</id>
							<phase>install</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
							<outputDirectory>${project.build.directory}/scripts</outputDirectory>
								<resources>
									<resource>
										<filtering>false</filtering>
										<directory>scripts</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<id>copy-resources-3</id>
							<phase>install</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
							<outputDirectory>${project.build.directory}/output</outputDirectory>
								<resources>
									<resource>
										<filtering>false</filtering>
										<directory>output</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
				<plugin>
				   <groupId>org.apache.maven.plugins</groupId>
				   <artifactId>maven-antrun-plugin</artifactId>
				   <version>1.7</version>
				   <executions>
				      <execution>
				      <phase>install</phase>
				      <goals><goal>run</goal></goals>
				      <configuration>
				         <target name="copy files to output directory">      
				            <copy todir="${copy.location}">
				                <fileset dir="${project.build.directory}" includes="*.jar"></fileset>
				                <fileset dir="${project.build.directory}" includes="lib/*"></fileset>
				                <fileset dir="${project.build.directory}" includes="resources/*"></fileset>
				                <fileset dir="${project.build.directory}" includes="input/*"></fileset>
				                <fileset dir="${project.build.directory}" includes="scripts/*"></fileset>
				                <fileset dir="${project.build.directory}" includes="output/*"></fileset>
				            </copy>
				         </target>
				      </configuration>                       
				   </execution> 
				 </executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>